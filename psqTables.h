#pragma once

//tables used taken from CPW engine, 
//tables are flipped along a horizontal middle line for black
static const int pawnPsqMg[64] = {
	 0,   0,   0,   0,   0,   0,   0,   0, //Recalculate all these tables for black at program start...
	-6,  -4,   1,   1,   1,   1,  -4,  -6, //instead of using a black color index array for lookup flips??
	-6,  -4,   1,   2,   2,   1,  -4,  -6, //Would want to make thread safe so need to look into that
	-6,  -4,   2,   8,   8,   2,  -4,  -6,
	-6,  -4,   5,  10,  10,   5,  -4,  -6,
	-4,  -4,   1,   5,   5,   1,  -4,  -4,
	-6,  -4,   1, -24,  -24,  1,  -4,  -6,
	 0,   0,   0,   0,   0,   0,   0,   0
};

static const int pawnPsqEg[64] = {
	 0,   0,   0,   0,   0,   0,   0,   0,
	-6,  -4,   1,   1,   1,   1,  -4,  -6,
	-6,  -4,   1,   2,   2,   1,  -4,  -6,
	-6,  -4,   2,   8,   8,   2,  -4,  -6,
	-6,  -4,   5,  10,  10,   5,  -4,  -6,
	-4,  -4,   1,   5,   5,   1,  -4,  -4,
	-6,  -4,   1, -24,  -24,  1,  -4,  -6,
	 0,   0,   0,   0,   0,   0,   0,   0
};

static const int knightPsqMg[64] = {
	-8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,
	-8,   0,   0,   0,   0,   0,   0,  -8,
	-8,   0,   4,   6,   6,   4,   0,  -8,
	-8,   0,   6,   8,   8,   6,   0,  -8,
	-8,   0,   6,   8,   8,   6,   0,  -8,
	-8,   0,   4,   6,   6,   4,   0,  -8,
	-8,   0,   1,   2,   2,   1,   0,  -8,
   -16, -12,  -8,  -8,  -8,  -8, -12,  -16
};

static const int knightPsqEg[64] = {
	-8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,
	-8,   0,   0,   0,   0,   0,   0,  -8,
	-8,   0,   4,   6,   6,   4,   0,  -8,
	-8,   0,   6,   8,   8,   6,   0,  -8,
	-8,   0,   6,   8,   8,   6,   0,  -8,
	-8,   0,   4,   6,   6,   4,   0,  -8,
	-8,   0,   1,   2,   2,   1,   0,  -8,
   -16, -12,  -8,  -8,  -8,  -8, -12,  -16
};

static const int bishopPsqMg[64] = {
	-4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,
	-4,   0,   0,   0,   0,   0,   0,  -4,
	-4,   0,   2,   4,   4,   2,   0,  -4,
	-4,   0,   4,   6,   6,   4,   0,  -4,
	-4,   0,   4,   6,   6,   4,   0,  -4,
	-4,   1,   2,   4,   4,   2,   1,  -4,
	-4,   2,   1,   1,   1,   1,   2,  -4,
	-4,  -4, -12,  -4,  -4, -12,  -4,  -4
};

static const int bishopPsqEg[64] = {
	-4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,
	-4,   0,   0,   0,   0,   0,   0,  -4,
	-4,   0,   2,   4,   4,   2,   0,  -4,
	-4,   0,   4,   6,   6,   4,   0,  -4,
	-4,   0,   4,   6,   6,   4,   0,  -4,
	-4,   1,   2,   4,   4,   2,   1,  -4,
	-4,   2,   1,   1,   1,   1,   2,  -4,
	-4,  -4, -12,  -4,  -4, -12,  -4,  -4
};

static const int rookPsqMg[64] = {
	 5,   5,   5,   5,   5,   5,   5,   5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	 0,   0,   0,   2,   2,   0,   0,   0
};

static const int rookPsqEg[64] = {
	 5,   5,   5,   5,   5,   5,   5,   5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
	-5,   0,   0,   0,   0,   0,   0,  -5,
    -5,   0,   0,   0,   0,   0,   0,  -5,
	 0,   0,   0,   2,   2,   0,   0,   0
};

static const int queenPsqMg[64] = {
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   1,   1,   1,   1,   0,   0,
	0,   0,   1,   2,   2,   1,   0,   0,
	0,   0,   2,   3,   3,   2,   0,   0,
	0,   0,   2,   3,   3,   2,   0,   0,
	0,   0,   1,   2,   2,   1,   0,   0,
	0,   0,   1,   1,   1,   1,   0,   0,
   -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5
};

static const int queenPsqEg[64] = {
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   1,   1,   1,   1,   0,   0,
	0,   0,   1,   2,   2,   1,   0,   0,
	0,   0,   2,   3,   3,   2,   0,   0,
	0,   0,   2,   3,   3,   2,   0,   0,
	0,   0,   1,   2,   2,   1,   0,   0,
	0,   0,   1,   1,   1,   1,   0,   0,
   -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5
};

static const int kingPsqMg[64] = {
   -40, -30, -50, -70, -70, -50, -30, -40,
   -30, -20, -40, -60, -60, -40, -20, -30,
   -20, -10, -30, -50, -50, -30, -10, -20,
   -10,   0, -20, -40, -40, -20,   0, -10,
	 0,  10, -10, -30, -30, -10,  10,   0,
	10,  20,   0, -20, -20,   0,  20,  10,
	30,  40,  20,   0,   0,  20,  40,  30,
	40,  50,  30,  10,  10,  30,  50,  40
};

static const int kingPsqEg[64] = {
	-72, -48, -36, -24, -24, -36, -48, -72,
	-48, -24, -12,   0,   0, -12, -24, -48,
	-36, -12,   0,  12,  12,   0, -12, -36,
	-24,   0,  12,  24,  24,  12,   0, -24,
	-24,   0,  12,  24,  24,  12,   0, -24,
	-36, -12,   0,  12,  12,   0, -12, -36,
	-48, -24, -12,   0,   0, -12, -24, -48,
	-72, -48, -36, -24, -24, -36, -48, -72
};
//indexed by color and flipped for black. Change later and let program do flipping?
static const int weak_pawn_pcsq[2][64] = { {
		0,   0,   0,   0,   0,   0,   0,   0,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		0,   0,   0,   0,   0,   0,   0,   0
	},{
		0,    0,   0,   0,   0,   0,   0,   0,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		-10, -12, -14, -16, -16, -14, -12, -10,
		0,    0,   0,   0,   0,   0,   0,   0,
	}
};

static const int passed_pawn_pcsq[2][64] = { {
		0,   0,   0,   0,   0,   0,   0,   0,
		140, 140, 140, 140, 140, 140, 140, 140,
		92,  92,  92,  92,  92,  92,  92,  92,
		56,  56,  56,  56,  56,  56,  56,  56,
		32,  32,  32,  32,  32,  32,  32,  32,
		20,  20,  20,  20,  20,  20,  20,  20,
		20,  20,  20,  20,  20,  20,  20,  20,
		0,   0,   0,   0,   0,   0,   0,   0
	},{
		0,     0,   0,   0,   0,   0,   0,   0,
		20,   20,  20,  20,  20,  20,  20,  20,
		20,   20,  20,  20,  20,  20,  20,  20,
		32,   32,  32,  32,  32,  32,  32,  32,
		56,   56,  56,  56,  56,  56,  56,  56,
		92,   92,  92,  92,  92,  92,  92,  92,
		140, 140, 140, 140, 140, 140, 140, 140,
		0,     0,   0,   0,   0,   0,   0,   0,
	}
};