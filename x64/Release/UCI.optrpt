
Begin optimization report for: __$U1

    Report from: Interprocedural optimizations [ipo]

<compiler generated>:INLINE REPORT START: (__$U1)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(698,40):(1)-> DELETED: std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer(std::_Immortalizer<std::_Iostream_error_category> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__$U1] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :      18
            Global    :       0
            Local     :      18
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::~exception(std::exception *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gexception@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::~bad_cast(std::bad_cast *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gbad_cast@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ctype<char>::~ctype(std::ctype<char> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$ctype@D@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      35
            Global    :      20
            Local     :      15
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::~numpunct(std::numpunct<char> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$numpunct@D@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      33
            Global    :      20
            Local     :      13
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>::~num_get(std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      19
            Local     :       7
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>::~num_put(std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      19
            Local     :       7
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx r8-r12]
        
    Routine temporaries
        Total         :      52
            Global    :      26
            Local     :      26
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   10[ rax rdx rcx rbx rbp r8-r11 r15]
        
    Routine temporaries
        Total         :      61
            Global    :      27
            Local     :      34
        Regenerable   :       6
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   10[ rax rdx rcx r8-r13 r15]
        
    Routine temporaries
        Total         :      67
            Global    :      27
            Local     :      40
        Regenerable   :       6
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: <unnamed>(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

<compiler generated>:INLINE REPORT START: (<unnamed>(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int))
INLINE REPORT END

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      32
            Global    :       0
            Local     :      32
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: <unnamed>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

<compiler generated>:INLINE REPORT START: (<unnamed>(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, unsigned int))
INLINE REPORT END

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      32
            Global    :       0
            Local     :      32
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::UCI(UCI *)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(20,1):INLINE REPORT START: (UCI::UCI(UCI *))
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(20,1):remark #34051: REGISTER ALLOCATION : [??0UCI@@QEAA@XZ] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r14]
        
    Routine temporaries
        Total         :      24
            Global    :      19
            Local     :       5
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::uciLoop(UCI *)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(25,1):INLINE REPORT START: (UCI::uciLoop(UCI *))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(26,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(27,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(40,15):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::deque(std::deque<StateInfo, std::allocator<StateInfo>> *, std::deque<StateInfo, std::allocator<StateInfo>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(40,15):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *, std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::pointer)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(43,2):(1)-> INLINE: std::ios_base::setf(std::ios_base *, std::ios_base::fmtflags)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(47,2):(1)-> UCI::newGame(UCI *, BitBoards &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(51,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(51,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(53,2):(1)-> INLINE: std::getline<char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(53,2):(1)-> INLINE: std::getline<char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(53,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(53,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(55,22):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::_Mystr &, std::ios_base::openmode, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(57,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::clear(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(59,3):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, std::ios_base &(__cdecl *)(std::ios_base &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(59,3):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(61,3):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(63,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(63,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(63,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(64,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(64,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(65,4):(1)-> INLINE: UCI::printOptions(UCI *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(66,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(66,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(68,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(70,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(70,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(73,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(74,4):(1)-> UCI::setOption(UCI *, std::istringstream &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(76,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(78,4):(1)-> UCI::newGame(UCI *, BitBoards &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(81,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(82,4):(1)-> UCI::test(UCI *, BitBoards &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(84,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(85,4):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(86,4):(1)-> INLINE: std::stoi(const std::string &, size_t *, int)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(89,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(90,4):(1)-> INLINE: UCI::perftUCI(UCI *, BitBoards &, std::istringstream &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(379,14):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(381,2):(2)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(383,8):(2)-> INLINE: std::stoi(const std::string &, size_t *, int)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, unsigned __int64)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(391,1):(2)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(92,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(93,4):(1)-> INLINE: UCI::divideUCI(UCI *, BitBoards &, std::istringstream &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(395,14):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(397,2):(2)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(399,8):(2)-> INLINE: std::stoi(const std::string &, size_t *, int)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(404,2):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(405,1):(2)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(95,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(96,4):(1)-> UCI::updatePosition(UCI *, BitBoards &, std::istringstream &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(98,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(98,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(101,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(101,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(103,4):(1)-> INLINE: UCI::helpUCI(UCI *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(415,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(415,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(416,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(416,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(417,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(417,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(418,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(418,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(419,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(419,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(420,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(420,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(421,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(421,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(422,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(422,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(423,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(423,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(424,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(424,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(425,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(425,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(426,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(426,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(105,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(106,4):(1)-> INLINE: UCI::printOptions(UCI *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(2)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(2)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(108,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(108,27):(1)-> UCI::go(UCI *, BitBoards &, std::istringstream &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(110,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(112,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(112,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(113,4):(1)-> INLINE: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(117,4):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(117,4):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(118,2):(1)-> INLINE: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::~unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::~unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(119,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(25,1):remark #34051: REGISTER ALLOCATION : [?uciLoop@UCI@@QEAAXXZ] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:25

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    2230
            Global    :    1400
            Local     :     830
        Regenerable   :     297
        Spilled       :      46
        
    Routine stack
        Variables     :   14492 bytes*
            Reads     :     142 [5.47e+001 ~ 5.3%]
            Writes    :     103 [5.20e+001 ~ 5.0%]
        Spills        :     368 bytes*
            Reads     :      52 [7.00e+000 ~ 0.7%]
            Writes    :      47 [7.00e+000 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(780,2):remark #34051: REGISTER ALLOCATION : [??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:780

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r11 r13 r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     787
            Global    :     427
            Local     :     360
        Regenerable   :     183
        Spilled       :       5
        
    Routine stack
        Variables     :     812 bytes*
            Reads     :      65 [3.91e+000 ~ 2.3%]
            Writes    :      94 [9.08e+000 ~ 5.3%]
        Spills        :      40 bytes*
            Reads     :       5 [5.00e+000 ~ 2.9%]
            Writes    :       5 [5.00e+000 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::~sentry(std::basic_ostream<char, std::char_traits<char>>::sentry *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(130,4):remark #34051: REGISTER ALLOCATION : [??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:130

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rsi r8-r9 r13 zmm0]
        
    Routine temporaries
        Total         :     628
            Global    :     370
            Local     :     258
        Regenerable   :     178
        Spilled       :       2
        
    Routine stack
        Variables     :     640 bytes*
            Reads     :      30 [1.00e+000 ~ 1.7%]
            Writes    :      77 [2.00e+000 ~ 3.5%]
        Spills        :      16 bytes*
            Reads     :       2 [2.00e+000 ~ 3.5%]
            Writes    :       2 [2.00e+000 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::_Sentry_base::~_Sentry_base(std::basic_ostream<char, std::char_traits<char>>::_Sentry_base *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(106,4):remark #34051: REGISTER ALLOCATION : [??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::operator bool(const std::basic_ostream<char, std::char_traits<char>>::sentry *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(141,4):remark #34051: REGISTER ALLOCATION : [??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:141

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_ostream<char, std::char_traits<char>>::sentry::sentry(std::basic_ostream<char, std::char_traits<char>>::sentry *, std::basic_ostream<char, std::char_traits<char>>::_Myt &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(123,4):remark #34051: REGISTER ALLOCATION : [??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:123

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8 r15]
        
    Routine temporaries
        Total         :      63
            Global    :      41
            Local     :      22
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       1 [1.00e+000 ~ 1.8%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 1.8%]
            Writes    :       1 [1.00e+000 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::basic_ostream<char, std::char_traits<char>>::_Nput>(const std::locale &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(553,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:553

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     673
            Global    :     520
            Local     :     153
        Regenerable   :      35
        Spilled       :      24
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      32 [1.90e-003 ~ 0.0%]
            Writes    :      33 [1.01e+000 ~ 1.6%]
        Spills        :     192 bytes*
            Reads     :      24 [4.00e+000 ~ 6.3%]
            Writes    :      24 [4.00e+000 ~ 6.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ostreambuf_iterator<char, std::char_traits<char>>::ostreambuf_iterator(std::ostreambuf_iterator<char, std::char_traits<char>> *, std::ostreambuf_iterator<char, std::char_traits<char>>::streambuf_type *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf(628,3):remark #34051: REGISTER ALLOCATION : [??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf:628

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      23
            Global    :       0
            Local     :      23
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1016,3):remark #34051: REGISTER ALLOCATION : [??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1016

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      26
            Global    :      23
            Local     :       3
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Tidy(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, bool, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(2248,3):remark #34051: REGISTER ALLOCATION : [?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:2248

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      33
            Global    :      24
            Local     :       9
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::setOption(UCI *, std::istringstream &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(196,1):INLINE REPORT START: (UCI::setOption(UCI *, std::istringstream &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(197,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(199,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(201,2):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(201,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(202,3):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(202,3):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(202,3):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(202,3):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(203,4):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(204,5):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(204,21):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(205,5):(1)-> INLINE: std::stoi(const std::string &, size_t *, int)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(208,9):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(212,9):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(213,5):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(213,21):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(214,5):(1)-> INLINE: std::stoi(const std::string &, size_t *, int)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(220,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(196,1):remark #34051: REGISTER ALLOCATION : [?setOption@UCI@@QEAAXAEAV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:196

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rdi r8-r9 r12 r14-r15]
        
    Routine temporaries
        Total         :     159
            Global    :      77
            Local     :      82
        Regenerable   :      38
        Spilled       :       4
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      25 [9.99e+000 ~ 7.8%]
            Writes    :       8 [8.00e+000 ~ 6.3%]
        Spills        :      32 bytes*
            Reads     :       4 [4.00e+000 ~ 3.1%]
            Writes    :       4 [4.00e+000 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string(139,2):remark #34051: REGISTER ALLOCATION : [??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string:139

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rdx rcx]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &&, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string(25,2):remark #34051: REGISTER ALLOCATION : [??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string:25

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    1434
            Global    :     920
            Local     :     514
        Regenerable   :     221
        Spilled       :      24
        
    Routine stack
        Variables     :    1045 bytes*
            Reads     :      98 [8.09e+000 ~ 4.3%]
            Writes    :     117 [8.80e+000 ~ 4.7%]
        Spills        :     192 bytes*
            Reads     :      24 [5.00e+000 ~ 2.7%]
            Writes    :      24 [5.00e+000 ~ 2.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istream<char, std::char_traits<char>>::sentry::sentry(std::basic_istream<char, std::char_traits<char>>::sentry *, std::basic_istream<char, std::char_traits<char>>::_Myt &, bool)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream(117,4):remark #34051: REGISTER ALLOCATION : [??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream:117

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    1993
            Global    :    1211
            Local     :     782
        Regenerable   :     449
        Spilled       :      24
        
    Routine stack
        Variables     :    1656 bytes*
            Reads     :     111 [2.86e+000 ~ 2.6%]
            Writes    :     153 [4.06e+000 ~ 3.7%]
        Spills        :     192 bytes*
            Reads     :      24 [5.00e+000 ~ 4.6%]
            Writes    :      24 [5.00e+000 ~ 4.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istream<char, std::char_traits<char>>::_Sentry_base::~_Sentry_base(std::basic_istream<char, std::char_traits<char>>::_Sentry_base *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream(100,4):remark #34051: REGISTER ALLOCATION : [??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream:100

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::getline<char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &&, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, char)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string(77,2):remark #34051: REGISTER ALLOCATION : [??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string:77

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   10[ rax rdx rcx rdi r8-r9 r12 r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     746
            Global    :     406
            Local     :     340
        Regenerable   :     179
        Spilled       :       3
        
    Routine stack
        Variables     :     805 bytes*
            Reads     :      62 [6.25e+000 ~ 7.0%]
            Writes    :      87 [6.83e+000 ~ 7.6%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+000 ~ 3.3%]
            Writes    :       3 [3.00e+000 ~ 3.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::append(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(560,3):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1111,3):remark #34051: REGISTER ALLOCATION : [?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx r8-r10]
        
    Routine temporaries
        Total         :     139
            Global    :      87
            Local     :      52
        Regenerable   :      11
        Spilled       :       2
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      13 [1.67e-002 ~ 0.0%]
            Writes    :      13 [2.06e+000 ~ 3.3%]
        Spills        :      16 bytes*
            Reads     :       2 [9.95e-001 ~ 1.6%]
            Writes    :       2 [1.00e+000 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::locale::~locale(std::locale *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(430,3):remark #34051: REGISTER ALLOCATION : [??1locale@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:430

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r8]
        
    Routine temporaries
        Total         :      28
            Global    :      21
            Local     :       7
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Deque_alloc<std::_Deque_base_types<StateInfo, std::allocator<StateInfo>>>::~_Deque_alloc(std::_Deque_alloc<std::_Deque_base_types<StateInfo, std::allocator<StateInfo>>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque(822,3):remark #34051: REGISTER ALLOCATION : [??1?$_Deque_alloc@U?$_Deque_base_types@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque:822

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rcx r14]
        
    Routine temporaries
        Total         :      22
            Global    :      19
            Local     :       3
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::deque<StateInfo, std::allocator<StateInfo>>::emplace_back<>(std::deque<StateInfo, std::allocator<StateInfo>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(737,3):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque(1185,3):remark #34051: REGISTER ALLOCATION : [??$emplace_back@$$V@?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@QEAAXXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque:1185

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     100
            Global    :      46
            Local     :      54
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::printOptions(UCI *)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(184,1):INLINE REPORT START: (UCI::printOptions(UCI *))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(186,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(187,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(188,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(184,1):remark #34051: REGISTER ALLOCATION : [?printOptions@UCI@@QEAAXXZ] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:184

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      44
            Global    :      25
            Local     :      19
        Regenerable   :      10
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::perftUCI(UCI *, BitBoards &, std::istringstream &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(378,1):INLINE REPORT START: (UCI::perftUCI(UCI *, BitBoards &, std::istringstream &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(379,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(381,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(383,8):(1)-> INLINE: std::stoi(const std::string &, size_t *, int)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, unsigned __int64)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(390,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(391,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(378,1):remark #34051: REGISTER ALLOCATION : [?perftUCI@UCI@@QEAAXAEAVBitBoards@@AEAV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:378

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      90
            Global    :      55
            Local     :      35
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       6 [4.05e+000 ~ 4.3%]
            Writes    :       8 [8.00e+000 ~ 8.5%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+000 ~ 3.2%]
            Writes    :       3 [3.00e+000 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::divideUCI(UCI *, BitBoards &, std::istringstream &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(394,1):INLINE REPORT START: (UCI::divideUCI(UCI *, BitBoards &, std::istringstream &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(395,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(397,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(399,8):(1)-> INLINE: std::stoi(const std::string &, size_t *, int)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(404,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(405,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(394,1):remark #34051: REGISTER ALLOCATION : [?divideUCI@UCI@@QEAAXAEAVBitBoards@@AEAV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:394

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx r8 r13-r15]
        
    Routine temporaries
        Total         :      80
            Global    :      51
            Local     :      29
        Regenerable   :      12
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       6 [4.05e+000 ~ 4.6%]
            Writes    :       8 [8.00e+000 ~ 9.1%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+000 ~ 3.4%]
            Writes    :       3 [3.00e+000 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::drawUCI(UCI *, BitBoards &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(408,1):INLINE REPORT START: (UCI::drawUCI(UCI *, BitBoards &))
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(408,1):remark #34051: REGISTER ALLOCATION : [?drawUCI@UCI@@QEAAXAEAVBitBoards@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:408

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rdx rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::helpUCI(UCI *)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(413,1):INLINE REPORT START: (UCI::helpUCI(UCI *))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(414,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(415,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(415,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(416,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(416,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(417,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(417,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(418,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(418,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(419,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(419,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(420,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(420,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(421,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(421,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(422,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(422,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(423,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(423,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(424,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(424,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(425,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(425,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(426,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(426,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(413,1):remark #34051: REGISTER ALLOCATION : [?helpUCI@UCI@@QEAAXXZ] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:413

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :     133
            Global    :      49
            Local     :      84
        Regenerable   :      43
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::strToMove(UCI *, BitBoards &, std::string &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(284,1):INLINE REPORT START: (UCI::strToMove(UCI *, BitBoards &, std::string &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(287,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::length(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(288,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator[](std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(288,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator[](std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(1)-> INLINE: MoveList<4>::end(const MoveList<4> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(1)-> INLINE: MoveList<4>::begin(const MoveList<4> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(1)-> INLINE: MoveList<4>::MoveList(MoveList<4> *, const BitBoards &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(1)-> Uci::moveToStr(std::string *, const Move &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(1)-> INLINE: SMove::operator Move(const SMove *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(294,4):(1)-> INLINE: SMove::operator Move(const SMove *) const
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(284,1):remark #34051: REGISTER ALLOCATION : [?strToMove@UCI@@QEAA?AW4Move@@AEAVBitBoards@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:284

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      74
            Global    :      44
            Local     :      30
        Regenerable   :       8
        Spilled       :       7
        
    Routine stack
        Variables     :    2100 bytes*
            Reads     :       6 [8.85e+000 ~ 6.2%]
            Writes    :      12 [1.24e+001 ~ 8.6%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::exception(std::exception *, const std::exception &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34051: REGISTER ALLOCATION : [??0exception@std@@QEAA@AEBV01@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h:66

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::exception::what(const std::exception *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(88,5):remark #34051: REGISTER ALLOCATION : [?what@exception@std@@UEBAPEBDXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h:88

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Assign_rv(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Myt &&)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(961,3):remark #34051: REGISTER ALLOCATION : [?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:961

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbp rsi r8]
        
    Routine temporaries
        Total         :      29
            Global    :      22
            Local     :       7
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::bad_cast(std::bad_cast *, const std::bad_cast &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_typeinfo.h(118,7):remark #34051: REGISTER ALLOCATION : [??0bad_cast@std@@QEAA@AEBV01@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_typeinfo.h:118

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbx r8 zmm0]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::bad_cast::~bad_cast(std::bad_cast *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_typeinfo.h(118,7):remark #34051: REGISTER ALLOCATION : [??1bad_cast@std@@UEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_typeinfo.h:118

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_decimal_point(const std::numpunct<char> *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(231,3):remark #34051: REGISTER ALLOCATION : [?do_decimal_point@?$numpunct@D@std@@MEBADXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:231

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_thousands_sep(const std::numpunct<char> *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(236,3):remark #34051: REGISTER ALLOCATION : [?do_thousands_sep@?$numpunct@D@std@@MEBADXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:236

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_grouping(const std::numpunct<char> *, std::string *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(241,3):remark #34051: REGISTER ALLOCATION : [?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:241

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx r8-r11 r13]
        
    Routine temporaries
        Total         :     162
            Global    :     106
            Local     :      56
        Regenerable   :       9
        Spilled       :       2
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      17 [3.29e-001 ~ 0.4%]
            Writes    :      15 [5.15e+000 ~ 6.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.00e+000 ~ 1.3%]
            Writes    :       2 [1.00e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_falsename(const std::numpunct<char> *, std::numpunct<char>::string_type *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(246,3):remark #34051: REGISTER ALLOCATION : [?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:246

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx r8-r11 r13]
        
    Routine temporaries
        Total         :     162
            Global    :     106
            Local     :      56
        Regenerable   :       9
        Spilled       :       2
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      17 [3.29e-001 ~ 0.4%]
            Writes    :      15 [5.15e+000 ~ 6.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.00e+000 ~ 1.3%]
            Writes    :       2 [1.00e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::do_truename(const std::numpunct<char> *, std::numpunct<char>::string_type *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(251,3):remark #34051: REGISTER ALLOCATION : [?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:251

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx r8-r11 r13]
        
    Routine temporaries
        Total         :     162
            Global    :     106
            Local     :      56
        Regenerable   :       9
        Spilled       :       2
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      17 [3.29e-001 ~ 0.4%]
            Writes    :      15 [5.15e+000 ~ 6.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.00e+000 ~ 1.3%]
            Writes    :       2 [1.00e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Getloctxt<char, std::istreambuf_iterator<char, std::char_traits<char>>>(std::istreambuf_iterator<char, std::char_traits<char>> &, std::istreambuf_iterator<char, std::char_traits<char>> &, size_t, const char *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(560,3):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(606,2):remark #34051: REGISTER ALLOCATION : [??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAEAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0_KPEBD@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:606

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     282
            Global    :     181
            Local     :     101
        Regenerable   :      18
        Spilled       :       9
        
    Routine stack
        Variables     :     113 bytes*
            Reads     :      27 [3.65e+001 ~ 4.2%]
            Writes    :      23 [1.23e+001 ~ 1.4%]
        Spills        :      72 bytes*
            Reads     :       9 [9.31e+000 ~ 1.1%]
            Writes    :      10 [1.09e+001 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::istreambuf_iterator<char, std::char_traits<char>>::_Peek(const std::istreambuf_iterator<char, std::char_traits<char>> *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf(570,3):remark #34051: REGISTER ALLOCATION : [?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AEBADXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf:570

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r15]
        
    Routine temporaries
        Total         :      30
            Global    :      24
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>::_Mypunct>(const std::locale &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25401: memcopy(with guard) generated

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
Multiversioned v2
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
Remainder, Multiversioned v2
LOOP END
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25401: memcopy(with guard) generated

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
Multiversioned v2
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(571,8)
Remainder, Multiversioned v2
LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(731,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(731,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(553,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:553

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     808
            Global    :     582
            Local     :     226
        Regenerable   :      58
        Spilled       :      26
        
    Routine stack
        Variables     :     345 bytes*
            Reads     :      38 [1.60e+000 ~ 2.0%]
            Writes    :      38 [4.20e+000 ~ 5.1%]
        Spills        :     208 bytes*
            Reads     :      26 [7.00e+000 ~ 8.6%]
            Writes    :      26 [7.00e+000 ~ 8.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::ctype<char>::_Myt>(const std::locale &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(553,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:553

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     678
            Global    :     520
            Local     :     158
        Regenerable   :      37
        Spilled       :      24
        
    Routine stack
        Variables     :     232 bytes*
            Reads     :      34 [1.52e-002 ~ 0.0%]
            Writes    :      33 [1.07e+000 ~ 1.7%]
        Spills        :     192 bytes*
            Reads     :      24 [4.00e+000 ~ 6.3%]
            Writes    :      24 [4.00e+000 ~ 6.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, char)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(560,3):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(850,3):remark #34051: REGISTER ALLOCATION : [??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:850

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rbx r8-r10 r13]
        
    Routine temporaries
        Total         :     147
            Global    :      98
            Local     :      49
        Regenerable   :      11
        Spilled       :       2
        
    Routine stack
        Variables     :      73 bytes*
            Reads     :      17 [4.83e-001 ~ 0.7%]
            Writes    :      15 [5.24e+000 ~ 7.6%]
        Spills        :      16 bytes*
            Reads     :       2 [1.00e+000 ~ 1.5%]
            Writes    :       2 [1.00e+000 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: sprintf_s(char *, size_t, const char *, ...)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stdio.h(1839,9):remark #34051: REGISTER ALLOCATION : [sprintf_s] C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stdio.h:1839

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rdi r8-r12]
        
    Routine temporaries
        Total         :      42
            Global    :      23
            Local     :      19
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [1.00e+000 ~ 2.0%]
            Writes    :       2 [2.00e+000 ~ 3.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __local_stdio_printf_options()

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\corecrt_stdio_config.h(85,5):remark #34051: REGISTER ALLOCATION : [__local_stdio_printf_options] C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\corecrt_stdio_config.h:85

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    1[ rax]
        
    Routine temporaries
        Total         :      20
            Global    :       0
            Local     :      20
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Copy(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(2182,3):remark #34051: REGISTER ALLOCATION : [?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:2182

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx rsi r8-r10 r12]
        
    Routine temporaries
        Total         :     120
            Global    :      78
            Local     :      42
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       3 [1.72e+000 ~ 2.3%]
            Writes    :       8 [3.00e+000 ~ 4.1%]
        Spills        :      32 bytes*
            Reads     :       4 [3.00e+000 ~ 4.1%]
            Writes    :       4 [3.00e+000 ~ 4.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::overflow(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::int_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(120,3):remark #34051: REGISTER ALLOCATION : [?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:120

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi r8-r11 r13-r15]
        
    Routine temporaries
        Total         :     120
            Global    :      40
            Local     :      80
        Regenerable   :       4
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::underflow(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(207,3):remark #34051: REGISTER ALLOCATION : [?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:207

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      40
            Global    :      23
            Local     :      17
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::seekoff(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::pos_type *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::off_type, std::ios_base::seekdir, std::ios_base::openmode)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(41,21):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(227,3):remark #34051: REGISTER ALLOCATION : [?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:227

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx r8-r11]
        
    Routine temporaries
        Total         :      86
            Global    :      32
            Local     :      54
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::seekpos(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::pos_type *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::pos_type, std::ios_base::openmode)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(41,21):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(276,3):remark #34051: REGISTER ALLOCATION : [?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:276

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rbp r8-r11]
        
    Routine temporaries
        Total         :      68
            Global    :      31
            Local     :      37
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::skipws(std::ios_base &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ios(346,2):remark #34051: REGISTER ALLOCATION : [?skipws@std@@YAAEAVios_base@1@AEAV21@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ios:346

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::endl<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream(991,2):remark #34051: REGISTER ALLOCATION : [??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\ostream:991

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     723
            Global    :     544
            Local     :     179
        Regenerable   :      41
        Spilled       :      25
        
    Routine stack
        Variables     :     248 bytes*
            Reads     :      37 [2.02e+000 ~ 2.2%]
            Writes    :      34 [2.07e+000 ~ 2.2%]
        Spills        :     200 bytes*
            Reads     :      25 [5.00e+000 ~ 5.4%]
            Writes    :      25 [5.00e+000 ~ 5.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::eq_int_type(const std::char_traits<char>::int_type &, const std::char_traits<char>::int_type &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(594,3):remark #34051: REGISTER ALLOCATION : [?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd:594

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      27
            Global    :       0
            Local     :      27
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::deque<StateInfo, std::allocator<StateInfo>>::~deque(std::deque<StateInfo, std::allocator<StateInfo>> *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@QEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rbx r8-r9 r14-r15]
        
    Routine temporaries
        Total         :      41
            Global    :      29
            Local     :      12
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [3.21e-001 ~ 0.4%]
            Writes    :       1 [3.21e-001 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::locale::~locale(std::locale *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Glocale@std@@QEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbx rbp r8]
        
    Routine temporaries
        Total         :      33
            Global    :      23
            Local     :      10
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::_Tidy(std::numpunct<char> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(257,3):remark #34051: REGISTER ALLOCATION : [?_Tidy@?$numpunct@D@std@@AEAAXXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rcx r13]
        
    Routine temporaries
        Total         :      28
            Global    :      19
            Local     :       9
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istream<char, std::char_traits<char>>::sentry::operator bool(const std::basic_istream<char, std::char_traits<char>>::sentry *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream(122,4):remark #34051: REGISTER ALLOCATION : [??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream:122

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::use_facet<std::basic_istream<char, std::char_traits<char>>::_Nget>(const std::locale &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(553,2):remark #34051: REGISTER ALLOCATION : [??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale:553

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     673
            Global    :     520
            Local     :     153
        Regenerable   :      35
        Spilled       :      24
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      32 [1.90e-003 ~ 0.0%]
            Writes    :      33 [1.01e+000 ~ 1.6%]
        Spills        :     192 bytes*
            Reads     :      24 [4.00e+000 ~ 6.3%]
            Writes    :      24 [4.00e+000 ~ 6.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::istreambuf_iterator<char, std::char_traits<char>>::istreambuf_iterator(std::istreambuf_iterator<char, std::char_traits<char>> *, std::istreambuf_iterator<char, std::char_traits<char>>::streambuf_type *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf(502,3):remark #34051: REGISTER ALLOCATION : [??0?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf:502

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      26
            Global    :       0
            Local     :      26
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istream<char, std::char_traits<char>>::sentry::~sentry(std::basic_istream<char, std::char_traits<char>>::sentry *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream(111,8):remark #34051: REGISTER ALLOCATION : [??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\istream:111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      29
            Global    :      21
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::deque<StateInfo, std::allocator<StateInfo>>::_Growmap(std::deque<StateInfo, std::allocator<StateInfo>> *, std::deque<StateInfo, std::allocator<StateInfo>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque(1785,3):remark #34051: REGISTER ALLOCATION : [?_Growmap@?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@IEAAX_K@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\deque:1785

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r14]
        
    Routine temporaries
        Total         :      88
            Global    :      42
            Local     :      46
        Regenerable   :       9
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::str(const std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::_Mystr *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(93,3):remark #34051: REGISTER ALLOCATION : [?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   10[ rax rdx rcx r8-r11 r13-r15]
        
    Routine temporaries
        Total         :     151
            Global    :      77
            Local     :      74
        Regenerable   :      20
        Spilled       :       3
        
    Routine stack
        Variables     :     112 bytes*
            Reads     :      30 [3.27e+000 ~ 3.5%]
            Writes    :      27 [9.33e+000 ~ 10.0%]
        Spills        :      24 bytes*
            Reads     :       6 [2.20e+000 ~ 2.4%]
            Writes    :       3 [3.00e+000 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, std::ios_base::openmode, int)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(591,3):remark #34051: REGISTER ALLOCATION : [??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:591

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    1497
            Global    :     965
            Local     :     532
        Regenerable   :     261
        Spilled       :      28
        
    Routine stack
        Variables     :     932 bytes*
            Reads     :      64 [3.03e+000 ~ 1.3%]
            Writes    :     100 [1.48e+001 ~ 6.5%]
        Spills        :     224 bytes*
            Reads     :      30 [7.00e+000 ~ 3.1%]
            Writes    :      28 [8.00e+000 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(2355,2):remark #34051: REGISTER ALLOCATION : [??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@PEBD@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:2355

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8-r10 r13-r14]
        
    Routine temporaries
        Total         :     286
            Global    :     180
            Local     :     106
        Regenerable   :      21
        Spilled       :       5
        
    Routine stack
        Variables     :     160 bytes*
            Reads     :      33 [2.81e-002 ~ 0.0%]
            Writes    :      30 [7.06e+000 ~ 7.4%]
        Spills        :      40 bytes*
            Reads     :       5 [3.00e+000 ~ 3.1%]
            Writes    :       5 [3.00e+000 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string(170,2):remark #34051: REGISTER ALLOCATION : [??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\string:170

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r14 zmm0-zmm1]
        
    Routine temporaries
        Total         :     784
            Global    :     427
            Local     :     357
        Regenerable   :     181
        Spilled       :       5
        
    Routine stack
        Variables     :     812 bytes*
            Reads     :      64 [3.82e+000 ~ 2.6%]
            Writes    :      92 [7.89e+000 ~ 5.5%]
        Spills        :      40 bytes*
            Reads     :       5 [5.00e+000 ~ 3.5%]
            Writes    :       5 [5.00e+000 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx r8-r11 r15]
        
    Routine temporaries
        Total         :      64
            Global    :      25
            Local     :      39
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rsi r8-r11]
        
    Routine temporaries
        Total         :      58
            Global    :      25
            Local     :      33
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::append(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Myt &, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1070,3):remark #34051: REGISTER ALLOCATION : [?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1070

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rsi r8-r10 r14]
        
    Routine temporaries
        Total         :     146
            Global    :      91
            Local     :      55
        Regenerable   :      13
        Spilled       :       2
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      13 [1.67e-002 ~ 0.0%]
            Writes    :      13 [2.06e+000 ~ 2.9%]
        Spills        :      16 bytes*
            Reads     :       2 [9.95e-001 ~ 1.4%]
            Writes    :       2 [1.00e+000 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::append(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1087,3):remark #34051: REGISTER ALLOCATION : [?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1087

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    8[ rax rdx rcx rbx r8-r10 r13]
        
    Routine temporaries
        Total         :     264
            Global    :     162
            Local     :     102
        Regenerable   :      24
        Spilled       :       3
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      31 [1.96e-002 ~ 0.0%]
            Writes    :      30 [3.18e+000 ~ 4.4%]
        Spills        :      24 bytes*
            Reads     :       4 [9.96e-001 ~ 1.4%]
            Writes    :       3 [1.00e+000 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::assign(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1165,3):remark #34051: REGISTER ALLOCATION : [?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1165

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx r8-r10 r12 r14]
        
    Routine temporaries
        Total         :     147
            Global    :      90
            Local     :      57
        Regenerable   :       9
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      12 [2.06e-001 ~ 0.3%]
            Writes    :      12 [2.15e+000 ~ 3.0%]
        Spills        :      24 bytes*
            Reads     :       3 [1.44e+000 ~ 2.0%]
            Writes    :       3 [2.00e+000 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::_Mystr &, std::ios_base::openmode, int)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(2497,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 8)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(406,3):remark #34051: REGISTER ALLOCATION : [??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:406

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    1515
            Global    :     987
            Local     :     528
        Regenerable   :     255
        Spilled       :      28
        
    Routine stack
        Variables     :     928 bytes*
            Reads     :      69 [4.14e+000 ~ 1.8%]
            Writes    :     105 [1.38e+001 ~ 6.0%]
        Spills        :     224 bytes*
            Reads     :      30 [7.00e+000 ~ 3.0%]
            Writes    :      28 [8.00e+000 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Uci::moveToStr(std::string *, const Move &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(255,2):INLINE REPORT START: (Uci::moveToStr(std::string *, const Move &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(256,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(260,4):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(263,4):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(265,9):(1)-> INLINE: file_of(int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(265,9):(1)-> INLINE: from_sq(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(266,9):(1)-> INLINE: from_sq(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(266,9):(1)-> INLINE: rank_of(int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(267,10):(1)-> INLINE: file_of(int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(267,10):(1)-> INLINE: to_sq(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(268,10):(1)-> INLINE: to_sq(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(268,10):(1)-> INLINE: rank_of(int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(270,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(271,3):(1)-> INLINE: move_type(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(272,4):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, char)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(272,4):(1)-> INLINE: promotion_type(Move)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(275,21):(1)-> std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, std::ios_base::openmode, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(276,3):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(276,3):(1)-> std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(276,3):(1)-> std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(276,3):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(276,3):(1)-> std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(278,3):(1)-> INLINE: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::str(const std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::_Mystr *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(278,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(278,3):(1)-> INLINE: std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_stringstream(std::basic_stringstream<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(279,2):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(257,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(255,2):remark #34051: REGISTER ALLOCATION : [?moveToStr@Uci@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBW4Move@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:255

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r13 r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     645
            Global    :     413
            Local     :     232
        Regenerable   :     105
        Spilled       :       6
        
    Routine stack
        Variables     :     612 bytes*
            Reads     :      38 [1.54e+001 ~ 6.5%]
            Writes    :      44 [4.13e+001 ~ 17.5%]
        Spills        :      48 bytes*
            Reads     :      14 [5.88e+000 ~ 2.5%]
            Writes    :       6 [6.00e+000 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::assign(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Myt &, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(1149,3):remark #34051: REGISTER ALLOCATION : [?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:1149

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx r8-r10 r13-r14]
        
    Routine temporaries
        Total         :     153
            Global    :      96
            Local     :      57
        Regenerable   :      13
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      12 [2.51e-001 ~ 0.3%]
            Writes    :      12 [2.10e+000 ~ 2.7%]
        Spills        :      24 bytes*
            Reads     :       3 [2.00e+000 ~ 2.6%]
            Writes    :       3 [2.00e+000 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Wrap_alloc<std::_String_base_types<char, std::allocator<char>>::_Alloc>::allocate(std::_Wrap_alloc<std::_String_base_types<char, std::allocator<char>>::_Alloc> *, std::_Wrap_alloc<std::_String_base_types<char, std::allocator<char>>::_Alloc>::size_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(975,3):remark #34051: REGISTER ALLOCATION : [?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0:975

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      30
            Global    :      24
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_String_alloc<std::_String_base_types<char, std::allocator<char>>>::_Getal(std::_String_alloc<std::_String_base_types<char, std::allocator<char>>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring(691,3):remark #34051: REGISTER ALLOCATION : [?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xstring:691

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::make_error_code(std::error_code *, std::_Io_errc)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(479,2):remark #34051: REGISTER ALLOCATION : [?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:479

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbp r8-r11 r15]
        
    Routine temporaries
        Total         :      35
            Global    :      21
            Local     :      14
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ostreambuf_iterator<char, std::char_traits<char>>::failed(const std::ostreambuf_iterator<char, std::char_traits<char>> *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf(661,3):remark #34051: REGISTER ALLOCATION : [?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\streambuf:661

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      22
            Global    :       0
            Local     :      22
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::pbackfail(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *, std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::int_type)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(190,3):remark #34051: REGISTER ALLOCATION : [?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream:190

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      32
            Global    :      21
            Local     :      11
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::~unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\memory(1395,3):remark #34051: REGISTER ALLOCATION : [??1?$unique_ptr@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@U?$default_delete@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@2@@std@@QEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\memory:1395

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rdx rcx]
        
    Routine temporaries
        Total         :      23
            Global    :      19
            Local     :       4
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::numpunct<char>::_Init(std::numpunct<char> *, const std::_Locinfo &, bool)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(212,3)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25401: memcopy(with guard) generated

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(212,3)
Multiversioned v2
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(212,3)
Remainder, Multiversioned v2
LOOP END
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(214,3)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25401: memcopy(with guard) generated

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(214,3)
Multiversioned v2
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(214,3)
Remainder, Multiversioned v2
LOOP END
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(215,3)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25401: memcopy(with guard) generated

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(215,3)
Multiversioned v2
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2):remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(730,2) inlined into C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(215,3)
Remainder, Multiversioned v2
LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(731,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(731,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocale(731,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum(202,3):remark #34051: REGISTER ALLOCATION : [?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xlocnum:202

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   11[ rax rdx rcx rbx rdi r8-r13]
        
    Routine temporaries
        Total         :     160
            Global    :      71
            Local     :      89
        Regenerable   :      27
        Spilled       :       4
        
    Routine stack
        Variables     :     112 bytes*
            Reads     :       2 [1.50e+000 ~ 0.5%]
            Writes    :       3 [3.00e+000 ~ 1.1%]
        Spills        :      32 bytes*
            Reads     :       4 [4.00e+000 ~ 1.4%]
            Writes    :       4 [4.00e+000 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::~failure(std::ios_base::failure *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(224,8):remark #34051: REGISTER ALLOCATION : [??1failure@ios_base@std@@UEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase:224

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::failure(std::ios_base::failure *, const std::ios_base::failure &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(508,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(224,8):remark #34051: REGISTER ALLOCATION : [??0failure@ios_base@std@@QEAA@AEBV012@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase:224

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      21
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::failure(std::ios_base::failure *, const char *, const std::error_code &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(235,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(546,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(553,3):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(53,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(54,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(521,2):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase(238,4):remark #34051: REGISTER ALLOCATION : [??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xiosbase:238

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   12[ rax rdx rcx r8-r15 zmm0]
        
    Routine temporaries
        Total         :     350
            Global    :     203
            Local     :     147
        Regenerable   :      42
        Spilled       :       5
        
    Routine stack
        Variables     :     296 bytes*
            Reads     :      53 [1.82e+001 ~ 9.4%]
            Writes    :      44 [3.25e+001 ~ 16.7%]
        Spills        :      40 bytes*
            Reads     :       5 [4.00e+000 ~ 2.1%]
            Writes    :       5 [4.00e+000 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::message(const std::_Iostream_error_category *, std::string *, int) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(626,3):remark #34051: REGISTER ALLOCATION : [?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:626

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx rbx r8-r11 r14]
        
    Routine temporaries
        Total         :     281
            Global    :     184
            Local     :      97
        Regenerable   :      18
        Spilled       :       3
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      34 [3.29e-001 ~ 0.4%]
            Writes    :      27 [5.14e+000 ~ 6.6%]
        Spills        :      24 bytes*
            Reads     :       4 [1.00e+000 ~ 1.3%]
            Writes    :       3 [1.00e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::name(const std::_Iostream_error_category *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(621,3):remark #34051: REGISTER ALLOCATION : [?name@_Iostream_error_category@std@@UEBAPEBDXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:621

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::message(const std::_Generic_error_category *, std::string *, int) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(605,3):remark #34051: REGISTER ALLOCATION : [?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:605

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    9[ rax rdx rcx r8-r13]
        
    Routine temporaries
        Total         :     166
            Global    :     107
            Local     :      59
        Regenerable   :       9
        Spilled       :       2
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      17 [3.29e-001 ~ 0.4%]
            Writes    :      15 [5.15e+000 ~ 6.6%]
        Spills        :      16 bytes*
            Reads     :       2 [1.00e+000 ~ 1.3%]
            Writes    :       2 [1.00e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::name(const std::_Generic_error_category *) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(600,3):remark #34051: REGISTER ALLOCATION : [?name@_Generic_error_category@std@@UEBAPEBDXZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:600

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    2[ rax rcx]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::system_error::system_error(std::system_error *, const std::system_error &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(508,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(529,7):remark #34051: REGISTER ALLOCATION : [??0system_error@std@@QEAA@AEBV01@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:529

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rbp r8 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      21
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::_System_error(std::_System_error *, const std::_System_error &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(508,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(508,7):remark #34051: REGISTER ALLOCATION : [??0_System_error@std@@QEAA@AEBV01@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:508

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    7[ rax rdx rcx rbx rdi r8 zmm0]
        
    Routine temporaries
        Total         :      31
            Global    :      21
            Local     :      10
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::equivalent(const std::error_category *, const std::error_code &, int) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(462,2):remark #34051: REGISTER ALLOCATION : [?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:462

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8-r9]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::equivalent(const std::error_category *, int, const std::error_condition &) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(455,2):remark #34051: REGISTER ALLOCATION : [?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:455

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx r8 r12]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       4
        Spilled       :       1
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [1.05e+000 ~ 2.7%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::default_error_condition(const std::error_category *, std::error_condition *, int) const

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error(448,2):remark #34051: REGISTER ALLOCATION : [?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\system_error:448

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    4[ rax rdx rcx r8]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::~runtime_error(std::runtime_error *)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\stdexcept(155,7):remark #34051: REGISTER ALLOCATION : [??1runtime_error@std@@UEAA@XZ] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\stdexcept:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    3[ rax rdx rcx]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::runtime_error(std::runtime_error *, const std::runtime_error &)

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vcruntime_exception.h(66,5):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\stdexcept(155,7):remark #34051: REGISTER ALLOCATION : [??0runtime_error@std@@QEAA@AEBV01@@Z] C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\stdexcept:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rbx r8 zmm0]
        
    Routine temporaries
        Total         :      30
            Global    :      21
            Local     :       9
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::test(UCI *, BitBoards &, StateListPtr &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(338,1):INLINE REPORT START: (UCI::test(UCI *, BitBoards &, StateListPtr &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(343,2):(1)-> INLINE: time(time_t *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(348,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(350,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator+=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(352,22):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::_Mystr &, std::ios_base::openmode, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(354,3):(1)-> UCI::updatePosition(UCI *, BitBoards &, std::istringstream &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(357,15):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(358,22):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::_Mystr &, std::ios_base::openmode, int)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(360,3):(1)-> UCI::go(UCI *, BitBoards &, std::istringstream &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(362,3):(1)-> INLINE: ThreadPool::nodes_searched(const ThreadPool *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(102,31):(2)-> INLINE: ThreadPool::accumulateMember(const ThreadPool *, int) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,3):(3)-> INLINE: std::vector<Thread *, std::allocator<Thread *>>::end(const std::vector<Thread *, std::allocator<Thread *>> *, std::vector<Thread *, std::allocator<Thread *>>::const_iterator *) const
         {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,3):(3)-> INLINE: std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::operator!=(const std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>> *, const std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::_Myiter &) const
         {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,3):(3)-> INLINE: std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::operator!=(const std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>> *, const std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::_Myiter &) const
         {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,3):(3)-> INLINE: std::vector<Thread *, std::allocator<Thread *>>::begin(const std::vector<Thread *, std::allocator<Thread *>> *, std::vector<Thread *, std::allocator<Thread *>>::const_iterator *) const
         {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,17):(3)-> INLINE: std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::operator*(const std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(115,22):(3)-> INLINE: std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>>::operator++(std::_Vector_const_iterator<std::_Vector_val<std::_Vector_alloc<std::_Vec_base_types<Thread *, std::allocator<Thread *>>>::_Val_types>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(117,4):(3)-> INLINE: std::_Atomic_ullong::load(const std::_Atomic_ullong *, std::memory_order) const
         {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(363,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(363,2):(1)-> INLINE: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(363,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(363,2):(1)-> INLINE: std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(368,2):(1)-> INLINE: time(time_t *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(372,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, long)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(372,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(372,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(372,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(373,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, long)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(373,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(373,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(374,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, long)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(374,2):(1)-> std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(374,2):(1)-> std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::_Myt &(__cdecl *)(std::basic_ostream<char, std::char_traits<char>>::_Myt &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(375,1):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(375,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(375,1):(1)-> std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(375,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(530,3):remark #34026: call to memcpy implemented as a call to optimized library version
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(338,1):remark #34051: REGISTER ALLOCATION : [?test@UCI@@QEAAXAEAVBitBoards@@AEAV?$unique_ptr@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@U?$default_delete@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rsi r8-r15]
        
    Routine temporaries
        Total         :     563
            Global    :     312
            Local     :     251
        Regenerable   :      74
        Spilled       :       7
        
    Routine stack
        Variables     :     760 bytes*
            Reads     :      72 [7.89e+002 ~ 11.6%]
            Writes    :      55 [1.12e+003 ~ 16.5%]
        Spills        :      56 bytes*
            Reads     :       7 [5.00e+000 ~ 0.1%]
            Writes    :       7 [5.00e+000 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::go(UCI *, BitBoards &, std::istringstream &, StateListPtr &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(223,1):INLINE REPORT START: (UCI::go(UCI *, BitBoards &, std::istringstream &, StateListPtr &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(224,25):(1)-> INLINE: Search::SearchControls::SearchControls(Search::SearchControls *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(227,2):(1)-> INLINE: now()
C:\Users\C-60\Desktop\cppPrograms\StuckFish\defines.h(57,2):(2)-> INLINE: std::chrono::time_point<std::chrono::steady_clock, std::chrono::steady_clock::duration>::time_since_epoch(const std::chrono::time_point<std::chrono::steady_clock, std::chrono::steady_clock::duration> *, std::chrono::steady_clock::duration *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\defines.h(57,2):(2)-> INLINE: std::chrono::duration_cast<std::chrono::milliseconds, __int64, std::nano>(std::enable_if<1, std::chrono::milliseconds>::type *, const std::chrono::duration<__int64, std::nano> &)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\defines.h(57,2):(2)-> INLINE: std::chrono::duration<__int64, std::milli>::count(const std::chrono::duration<__int64, std::milli> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\defines.h(57,2):(2)-> INLINE: std::chrono::steady_clock::now(std::chrono::steady_clock::time_point *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(229,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(231,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(231,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(231,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(231,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(233,3):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(233,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, long &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(234,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(234,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, long &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(235,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(235,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, int &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(236,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(236,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, int &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(237,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(237,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, int &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(238,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(238,34):(1)-> std::basic_istream<char, std::char_traits<char>>::operator>>(std::basic_istream<char, std::char_traits<char>> *, int &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(239,8):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(248,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(249,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(223,1):remark #34051: REGISTER ALLOCATION : [?go@UCI@@QEAAXAEAVBitBoards@@AEAV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$unique_ptr@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@U?$default_delete@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@2@@4@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:223

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     190
            Global    :      79
            Local     :     111
        Regenerable   :      39
        Spilled       :       8
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :      18 [1.90e+001 ~ 8.2%]
            Writes    :      17 [1.60e+001 ~ 6.9%]
        Spills        :      64 bytes*
            Reads     :       8 [7.01e+000 ~ 3.0%]
            Writes    :       8 [7.01e+000 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::updatePosition(UCI *, BitBoards &, std::istringstream &, StateListPtr &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(122,1):INLINE REPORT START: (UCI::updatePosition(UCI *, BitBoards &, std::istringstream &, StateListPtr &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(124,14):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(124,21):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(126,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(131,2):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::deque(std::deque<StateInfo, std::allocator<StateInfo>> *, std::deque<StateInfo, std::allocator<StateInfo>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(131,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *, std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::pointer)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(131,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator=(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *, std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::_Myt &&)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(131,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::~unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(133,2):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(135,3):(1)-> UCI::newGame(UCI *, BitBoards &, StateListPtr &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(137,7):(1)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(139,3):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(139,3):(1)-> INLINE: std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(139,3):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(139,3):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(139,3):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(140,4):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(140,4):(1)-> std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(140,4):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator+=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Myt &)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(142,3):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator->(const std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(142,3):(1)-> INLINE: ThreadPool::main(const ThreadPool *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(100,31):(2)-> INLINE: std::vector<Thread *, std::allocator<Thread *>>::front(const std::vector<Thread *, std::allocator<Thread *>> *) const
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(142,3):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::back(std::deque<StateInfo, std::allocator<StateInfo>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(147,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(147,3):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> std::operator>><char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>> &, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> INLINE: std::ios_base::operator bool(const std::ios_base *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(151,2):(1)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(153,3):(1)-> INLINE: std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(156,4):(1)-> INLINE: UCI::strToMove(UCI *, BitBoards &, std::string &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(287,2):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::length(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(288,3):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator[](std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(288,3):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator[](std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::size_type)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(2)-> INLINE: MoveList<4>::begin(const MoveList<4> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(2)-> INLINE: MoveList<4>::MoveList(MoveList<4> *, const BitBoards &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(292,2):(2)-> INLINE: MoveList<4>::end(const MoveList<4> *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(2)-> INLINE: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(2)-> INLINE: std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(2)-> Uci::moveToStr(std::string *, const Move &)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(293,3):(2)-> INLINE: SMove::operator Move(const SMove *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(294,4):(2)-> INLINE: SMove::operator Move(const SMove *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(158,4):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::emplace_back<>(std::deque<StateInfo, std::allocator<StateInfo>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(158,4):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator->(const std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(160,4):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::back(std::deque<StateInfo, std::allocator<StateInfo>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(160,4):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator->(const std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(167,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(167,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(167,1):(1)-> std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(737,3):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iosfwd(517,3):remark #34026: call to memcmp implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(737,3):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(122,1):remark #34051: REGISTER ALLOCATION : [?updatePosition@UCI@@QEAAXAEAVBitBoards@@AEAV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$unique_ptr@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@U?$default_delete@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@2@@4@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:122

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     419
            Global    :     246
            Local     :     173
        Regenerable   :      57
        Spilled       :       9
        
    Routine stack
        Variables     :    2236 bytes*
            Reads     :      37 [5.77e+001 ~ 9.0%]
            Writes    :      42 [4.89e+001 ~ 7.6%]
        Spills        :      72 bytes*
            Reads     :      16 [8.56e+000 ~ 1.3%]
            Writes    :       9 [8.56e+000 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: UCI::newGame(UCI *, BitBoards &, StateListPtr &)

    Report from: Interprocedural optimizations [ipo]

C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(170,1):INLINE REPORT START: (UCI::newGame(UCI *, BitBoards &, StateListPtr &))
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(171,2):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::deque(std::deque<StateInfo, std::allocator<StateInfo>> *, std::deque<StateInfo, std::allocator<StateInfo>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(171,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *, std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::pointer)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(171,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::~unique_ptr(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(171,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator=(std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *, std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::_Myt &&)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(173,2):(1)-> INLINE: ThreadPool::main(const ThreadPool *) const
C:\Users\C-60\Desktop\cppPrograms\StuckFish\Thread.h(100,31):(2)-> INLINE: std::vector<Thread *, std::allocator<Thread *>>::front(const std::vector<Thread *, std::allocator<Thread *>> *) const
       {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(173,2):(1)-> INLINE: std::deque<StateInfo, std::allocator<StateInfo>>::back(std::deque<StateInfo, std::allocator<StateInfo>> *)
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(173,2):(1)-> INLINE: std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>>::operator->(const std::unique_ptr<std::deque<StateInfo, std::allocator<StateInfo>>, std::default_delete<std::deque<StateInfo, std::allocator<StateInfo>>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -Qopt-report:3 to view full report. }}
INLINE REPORT END

    Report from: Code generation optimizations [cg]

C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(737,3):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2306,2):remark #34008: call to memmove not inlined based on compiler heuristics
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(471,2):remark #34026: call to memset implemented as a call to optimized library version
C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp(170,1):remark #34051: REGISTER ALLOCATION : [?newGame@UCI@@QEAAXAEAVBitBoards@@AEAV?$unique_ptr@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@U?$default_delete@V?$deque@UStateInfo@@V?$allocator@UStateInfo@@@std@@@std@@@2@@std@@@Z] C:\Users\C-60\Desktop\cppPrograms\StuckFish\UCI.cpp:170

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     205
            Global    :     117
            Local     :      88
        Regenerable   :      19
        Spilled       :       9
        
    Routine stack
        Variables     :      36 bytes*
            Reads     :       4 [2.16e-002 ~ 0.0%]
            Writes    :       8 [5.64e+000 ~ 3.4%]
        Spills        :      72 bytes*
            Reads     :      14 [7.27e+000 ~ 4.4%]
            Writes    :       9 [7.12e+000 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::failure::~failure(std::ios_base::failure *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gfailure@ios_base@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Iostream_error_category::~_Iostream_error_category(std::_Iostream_error_category *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_Iostream_error_category@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      19
            Local     :       7
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Generic_error_category::~_Generic_error_category(std::_Generic_error_category *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_Generic_error_category@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      19
            Local     :       7
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::system_error::~system_error(std::system_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gsystem_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_System_error::~_System_error(std::_System_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_G_System_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::error_category::~error_category(std::error_category *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gerror_category@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    5[ rax rdx rcx rsi r8]
        
    Routine temporaries
        Total         :      26
            Global    :      19
            Local     :       7
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::runtime_error::~runtime_error(std::runtime_error *, unsigned int)

    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [??_Gruntime_error@std@@UEAAPEAXI@Z] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :   18[ rbx rbp rsi rdi r12-r15 xmm6-xmm15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      28
            Global    :      20
            Local     :       8
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+000 ~ 0.0%]
            Writes    :       0 [0.00e+000 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
